// Code generated by structmorph; DO NOT EDIT.

package allsupportedtypes

func ConvertToTypeDTO(src Type) TypeDTO {

	return TypeDTO{
		StringField:    src.StringField,
		IntField:       src.IntField,
		Int8Field:      src.Int8Field,
		Int16Field:     src.Int16Field,
		Int32Field:     src.Int32Field,
		Int64Field:     src.Int64Field,
		UintField:      src.UintField,
		Uint8Field:     src.Uint8Field,
		Uint16Field:    src.Uint16Field,
		Uint32Field:    src.Uint32Field,
		Uint64Field:    src.Uint64Field,
		FloatField:     src.FloatField,
		F32Field:       src.F32Field,
		BoolField:      src.BoolField,
		ByteField:      src.ByteField,
		RuneField:      src.RuneField,
		SliceField:     src.SliceField,
		ArrayField:     src.ArrayField,
		MapField:       src.MapField,
		PointerField:   src.PointerField,
		StructField:    src.StructField,
		InterfaceField: src.InterfaceField,
		AnotherStruct:  src.AnotherStruct,
		CompositeType:  src.CompositeType,
	}
}

func ConvertToType(src TypeDTO) Type {

	return Type{
		StringField:    src.StringField,
		IntField:       src.IntField,
		Int8Field:      src.Int8Field,
		Int16Field:     src.Int16Field,
		Int32Field:     src.Int32Field,
		Int64Field:     src.Int64Field,
		UintField:      src.UintField,
		Uint8Field:     src.Uint8Field,
		Uint16Field:    src.Uint16Field,
		Uint32Field:    src.Uint32Field,
		Uint64Field:    src.Uint64Field,
		FloatField:     src.FloatField,
		F32Field:       src.F32Field,
		BoolField:      src.BoolField,
		ByteField:      src.ByteField,
		RuneField:      src.RuneField,
		SliceField:     src.SliceField,
		ArrayField:     src.ArrayField,
		MapField:       src.MapField,
		PointerField:   src.PointerField,
		StructField:    src.StructField,
		InterfaceField: src.InterfaceField,
		AnotherStruct:  src.AnotherStruct,
		CompositeType:  src.CompositeType,
	}
}
